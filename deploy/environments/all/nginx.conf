user seek seek;
worker_processes auto;
pid /run/nginx.pid;
daemon off;

events {
  worker_connections 1024;
}

http {
  log_format access_json escape=json '{ "@timestamp": "$time_iso8601", '
                          '"appname": "$app_name", '
                          '"remote_addr": "$remote_addr", '
                          '"@version": "1", '
                          '"remote_user": "$remote_user", '
                          '"request_time": $request_time, '
                          '"body_bytes_sent": $body_bytes_sent, '
                          '"request_length": $request_length, '
                          '"upstream_response_time": $upstream_response_time, '
                          '"status": "$status", '
                          '"host": "$host", '
                          '"sent_http_content_type": "$sent_http_content_type",  '
                          '"request_uri": "$request_uri", '
                          '"uri": "$uri", '
                          '"hostname": "$hostname", '
                          '"request": "$request", '
                          '"request_body": "$request_body", '
                          '"response_body_custom": "$response_body_custom", '
                          '"request_method": "$request_method", '
                          '"http_referer": "$http_referer", '
                          '"x-forwarded-for": "$http_x_forwarded_for", '
                          '"args": "$args", '
                          '"http_user_agent": "$http_user_agent" }';

  # Basic Settings
  sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	default_type application/octet-stream;
	gzip on;
        
  # Virtual Host Configs
	include /etc/nginx/conf.d/*.conf;
	include /usr/local/openresty/nginx/conf/mime.types;

  # Log Configs
  access_log /dev/stdout access_json;
  error_log /seek/logs/nginx_error.log;

  server {
      listen 80 default_server;
      listen [::]:80 ipv6only=on default_server;

      set $app_name "catho-role-normalization";

      location /healthcheck {
        access_log off;
        proxy_pass http://api:8192;
      }

      location / {
        proxy_pass http://api:8192;
      }
      
      location ~ ^/v1/role_normalization/events/(.*) {
        proxy_pass http://events_api:8192;
      }

      set $response_body_custom "";
      body_filter_by_lua '
      local response_body_custom = string.sub(ngx.arg[1], 1, 100000)
      ngx.ctx.buffered = (ngx.ctx.buffered or "") .. response_body_custom
      if ngx.arg[2] then
          ngx.var.response_body_custom = ngx.ctx.buffered
      end
      ';
  }
}
